@model StoreFront.DATA.EF.Product

@{
    ViewBag.Title = "Create Product";
}

<h2 class="text-center mb-4">@ViewBag.Title</h2>


<div class="form-container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="mb-5 text-center">
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="category" id="machine" value="1" checked>
                <label class="form-check-label" for="machine">
                    Machine
                </label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="category" id="mask" value="2">
                <label class="form-check-label" for="mask">
                    Mask
                </label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="category" id="cleaning" value="3">
                <label class="form-check-label" for="cleaning">
                    Cleaning
                </label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="category" id="accessories" value="4">
                <label class="form-check-label" for="accessories">
                    Accessories
                </label>
            </div>
        </div>

        <div class="row">
            <div class="form-group mb-4">
                @Html.LabelFor(model => model.ItemID, "Item", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ItemID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control col-md-8" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.UnitsAvailable, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UnitsAvailable, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnitsAvailable, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.StockStatusID, "Stock Status", htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    @Html.DropDownList("StockStatusID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StockStatusID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-5">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.MachineTypeID, "Machine Type", htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    @Html.DropDownList("MachineTypeID", null, "N/A", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MachineTypeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.MaskTypeID, "Mask Type", htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    @Html.DropDownList("MaskTypeID", null, "N/A", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MaskTypeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.MaskSizeID, "Mask Size", htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    @Html.DropDownList("MaskSizeID", null, "N/A", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MaskSizeID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group d-flex justify-content-around">
            @Html.ActionLink("Cancel", "Index", "Products", new { @class = "site-btn cancel-btn" })
            <input type="submit" value="Create" class="site-btn admin-btn" />
        </div>
    </div>
    }
</div>

<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
