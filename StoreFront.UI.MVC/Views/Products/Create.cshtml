@model StoreFront.DATA.EF.Product

@{
    ViewBag.Title = "Create Product";
}

<h2 class="text-center mb-5">Create Product</h2>

<div class="create-form">
    @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @*Product Name*@
        <div class="form-group form-inline mb-5">
            @Html.LabelFor(model => model.ProductName, "Product Name :", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control col-md-6" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>

        @*Product Category*@
        <div class="form-group form-inline mb-5">
            @Html.LabelFor(model => model.CategoryID, "Product Category :", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("CategoryID", null, "Choose a Category", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
        </div>

        @*Product Manufacturer*@
        <div class="form-group form-inline mb-5">
            @Html.LabelFor(model => model.ManufactureID, "Product Manufacture :", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("ManufactureID", null, "Choose a Manufacture", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ManufactureID, "", new { @class = "text-danger" })
        </div>

        @*Product Description*@
        <div class="form-group form-inline mb-5">
            @Html.LabelFor(model => model.Description, "Product Description :", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control col-md-8" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        @*Product Image*@
        <div class="form-group form-inline mb-5">
            @Html.LabelFor(model => model.ProductImage, "Product Image :", htmlAttributes: new { @class = "control-label" })
            <input type="file" name="ProductImage" />
        </div>

        @*Product Price*@
        <div class="form-group form-inline mb-5">
            @Html.LabelFor(model => model.Price, "Price :", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>

        @*Product Is Featured*@
        <div class="form-group form-inline mb-5">
            @Html.LabelFor(model => model.IsFeatured, "Is Featured :", htmlAttributes: new { @class = "control-label" })
            <div class="checkbox">
                @Html.EditorFor(model => model.IsFeatured)
                @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Buttons*@
        <div class="form-group form-inline d-flex justify-content-end">
            <input type="submit" value="Create" class="btn btn-secondary mr-3" />
            @Html.ActionLink("Cancel", "Index", "Products", new { @class = "btn btn-danger mr-3" })
        </div>


    }
</div>




@*

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>*@


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
