@model StoreFront.DATA.EF.Product

@{
    ViewBag.Title = $"Edit {Model.ProductName}";
}

<h2 class="text-center mb-4">@ViewBag.Title</h2>


<div class="form-container">
    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductID)
        @Html.HiddenFor(model => model.CategoryID)
        @Html.HiddenFor(model => model.ManufacturerID)
        @Html.HiddenFor(model => model.MachineTypeID)
        @Html.HiddenFor(model => model.MaskTypeID)
        @Html.HiddenFor(model => model.ProductImage)

        <div class="form-group mb-4">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-4">
            @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-4">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.UnitsAvailable, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UnitsAvailable, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnitsAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.StockStatusID, "Stock Status", htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    @Html.DropDownList("StockStatusID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StockStatusID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-4">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    <input type="file" name="productImage" />
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.IsFeatured, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsFeatured)
                        @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            @if (Model.MaskSizeID != null)
            {
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.MaskSizeID, "Mask Size", htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.DropDownList("MaskSizeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MaskSizeID, "", new { @class = "text-danger" })
                    </div>
                </div>

            }
        </div>
        <div class="form-group d-flex justify-content-around">
            @Html.ActionLink("Cancel", "Index", "Products", new { @class = "site-btn cancel-btn" })
            <input type="submit" value="Save" class="site-btn admin-btn" />
        </div>


    </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
