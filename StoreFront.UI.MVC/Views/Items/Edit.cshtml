@model StoreFront.DATA.EF.Item

@{
    ViewBag.Title = "Edit Item";
}

<h2 class="text-center mb-4">@ViewBag.Title</h2>

<div class="form-container">
    @using (Html.BeginForm("Edit", "Items", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ItemID)
            @Html.HiddenFor(model => model.ItemImage)

            <div class="form-group mb-4">
                @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ManufacturerID, "Manufacturer", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.DropDownList("ManufacturerID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ManufacturerID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ItemImage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" name="itemImage" />
                            @*@Html.EditorFor(model => model.ItemImage, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ItemImage, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsFeatured, htmlAttributes: new { @class = "control-label mr-2" })

                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsFeatured)
                                @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="form-group d-flex justify-content-around">
                @Html.ActionLink("Cancel", "Index", "Items", new { @class = "site-btn cancel-btn" })
                <input type="submit" value="Save" class="site-btn admin-btn ml-3" />
            </div>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
